#+BEGIN_HTML
---
layout: post
keywords: 
description: 
title: Python获取当前时间 
categories: [python]
tags: [python,time]
group: archive
icon: code
featured: false
---
#+END_HTML
* 简单获取当前时间
使用下面的命令即可获取当前时间
#+BEGIN_SRC python
import time
time.strftime('%c')
'Fri Nov  1 10:06:20 2013'
#+END_SRC
* 获取时间戳
Python获取时间的相关信息使用time模块。要获取当前时间，需先取得当前时间的时间戳，

*时间戳*是自1970年1月1日（00:00:00 GMT）至当前时间的总秒数。它也被称为Unix时间戳（Unix Timestamp）。

** 获取时间戳time.time()
#+BEGIN_SRC sh
import time
print time.time()
#输出的结果是：
1383271867.539839
#+END_SRC
** 格式化时间戳
但是这样是一连串的数字不是我们想要的结果，我们可以利用time模块的格式化时间的方法来处理:
#+BEGIN_SRC python
time.localtime(time.time())
#用time.localtime()方法，作用是格式化时间戳为本地的时间。
#输出的结果是：
time.struct_time(tm_year=2013, tm_mon=11, tm_mday=1, tm_hour=10, tm_min=11, tm_sec=15, tm_wday=4, tm_yday=305, tm_isdst=0)
#最后用time.strftime()方法，把刚才的一大串信息格式化成我们想要的东西，
time.strftime('%Y-%m-%d',time.localtime(time.time()))
#现在的结果是：
'2013-11-01'
#+END_SRC
** strftime(format[,tuple])
将指定的struct_time(默认为当前时间)，根据指定的格式化字符串输出

由于strftime()默认转换当前时间，所以可以不用写时间参数,只指定输出格式，即可获取当前时间。(本文开头简单获取时间即是如此)

所以前面的代码可以简写为
#+BEGIN_SRC sh
import time
time.strftime()
time.strftime('%Y-%m-%d')
'2013-11-01'
#+END_SRC
** strftime常用日期格式
+ %y 两位数的年份表示，不带世纪（00-99）
+ %Y 四位数的年份表示（000-9999）
+ %m 月份（01-12）
+ %d 月内中的一天（0-31）
+ %H 24小时制小时数（0-23）
+ %I 12小时制小时数（01-12）
+ %M 分钟数（00=59）
+ %S 秒（00-59）
+ %F 年-月-日（2013-06-27）
+ %D 月/天/年（06/27/13）

+ %a 星期简写名称(Thu)
+ %A 星期完整名称(Thursday）
+ %b 月份简写名称(Jun)
+ %B 月份完整名称(June)
+ %c 标准的日期时间字符串(Thu Jun 27 10:12:07 2013)
+ %e 在两字符域中，十进制表示的每月的第几天
+ %j 十进制表示一年第几天（001-366）
+ %p 本地A.M.或P.M.的等价表示
+ %U 一年的第几周（00-53）星期天为星期的开始
+ %w 星期（0-6），星期天为星期的开始
+ %W 一年的第几周（00-53）星期一为星期的开始
+ %x 标准时期字符串（06/27/13）
+ %X 标准时间字符串（10:16:35）
+ %z,%Z 当前时区的名称(+0800,CST)
+ %% %号本身 
* 参考资料
[[http://www.cnblogs.com/wanpython/archive/2010/08/07/1794598.html][python 获取当前时间]]

[[http://blog.chinaunix.net/uid-16539-id-2741508.html][Python 常用函数time.strftime()简介]]
