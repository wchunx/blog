#+BEGIN_HTML
---
layout: post
keywords: 
description: 
title: python httplib模块 
categories: [python]
tags: [python,module,httplib]
group: archive
icon: code
featured: false
---
#+END_HTML
* 简介
httplib 是 python中http 协议的客户端实现，可以使用该模块来与 HTTP 服务器进行交互。以下是一个非常简单的例子，使用httplib获取google首页的html：
#+BEGIN_SRC python
import httplib
conn = httplib.HTTPConnection("www.google.cn")
conn.request('get', '/')
print conn.getresponse().read()
conn.close()
#+END_SRC
* 类
** class httplib.HTTPConnection
+ 说明 :: 该类用于创建一个http类型的请求链接
+ 原型 :: 
HTTPConnection(host[, port[, strict[, timeout[, source_address]]]])
- host: 请求的服务器host
- port: 服务器web服务端口,如果未指定，而host形如”www.baidu.com:1443″,会提取其中的端口号。否则会使用默认的80端口。
- strict: 表示在无法解析服务器返回的状态行时(status line) (比较典型的状态行如： HTTP/1.0 200 OK)，是否抛BadStatusLine异常
- timeout: 单次请求的超时时间，没有时默认使用httplib模块内的全局的超时时间
- source_address
返回一个HTTPConnection对象
** class httplib.HTTPSConnection
+ 说明 :: 该类用于创建一个https类型的请求链接.是HTTPSConnection的子类，应用了SSL。默认端口443.
+ 原型 :: 
HTTPSConnection(host[, port[, key_file[, cert_file[, strict[, timeout]]]]])
- key_file: 一个包含PEM格式的私钥文件
- cert_file: 一个包含PEM格式的认证文件
- other：其它同http参数
返回一个HTTPSConnection对象
+ 注意 :: 
要创建https链接，必须要保证底层的socket模块是支持ssl的编译模式，即编译时ssl选项的开关是开着的
* HTTPConnection常用方法
** HTTPConnection.request(method, url[, body[, headers]])
+ 说明 ::
发送一个请求
- method: 请求的方式，如’GET’,'POST’,'HEAD’,'PUT’,'DELETE’等
- url: 请求的网页路径。如：’/index.html’
- body: 表示提交到服务器的数据，必须是字符串（如果method 是”post” ，则可以把body 理解为html 表单中的数据）
- headers: 请求的http头
** HTTPConnection.getresponse ()
获取Http 响应。返回的对象是HTTPResponse 的实例，关于HTTPResponse 在下面 会讲解。
** HTTPConnection.connect ()
连接到Http 服务器。
** HTTPConnection.close ()
关闭与服务器的连接。
** HTTPConnection.set_debuglevel ( level )
设置调试级别。参数level 的默认值为0 ，表示不输出任何调试信息。
* HTTPResponse对象的常用方法
HTTPResponse表示服务器对客户端请求的响应。往往通过调用HTTPConnection.getresponse()来创建，它有如下方法和属性：
** HTTPResponse.read([amt])
获取响应的消息体。如果请求的是一个普通的网页，那么该方法返回的是页面的html。可选参数amt表示从响应流中读取指定字节的数据，默认为空，读取全部数据
** HTTPResponse.getheader(name[, default])
获取响应头。Name表示头域(header field)名，可选参数default在头域名不存在的情况下作为默认值返回。
** HTTPResponse.getheaders()
以列表的形式[(header,value),(header1,value1)...]返回所有的头信息。
** HTTPResponse.msg
获取所有的响应头信息。
** HTTPResponse.version
取服务器所使用的http协议版本。11表示http/1.1；10表示http/1.0。
** HTTPResponse.status
获取响应的状态码。如：200表示请求成功。404表示NOT FOUND
** HTTPResponse.reason
回服务器处理请求的结果说明。一般为”OK”
